"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("./Api/index.js"),e=require("./utils.js");const n="get_status",r="get_segmentation",i="get_template",s="get_service_sector",a="get_attendant",o="get_contact",c="get_prot",u="put_contact",l="set_contact",d="open_followup",h="send_text",p="send_image",f="send_file",g="send_sound";exports.default=class Maxbot{constructor(t){return this.config={token:"",timeout:3e3,baseURL:"https://mbr.maxbot.com.br/api/v1.php"},this.ready=!1,this.cancelSources=[],this.allowedExt={file:["pdf","doc","docx","xls","xlsx","ppt","pptx","pps"],image:["jpg","jpeg","png","gif"],sound:["mp3"]},this.setMe(t),this}addError(t){return{status:0,msg:t}}isValidExt(t,n=""){const r=e.replaceAll(t,".","");if(!n){return Object.keys(this.allowedExt).reduce(((t,e)=>(this.allowedExt[e].forEach((e=>t.push(e))),t)),[]).includes(e.replaceAll(r,".",""))}return!!this.allowedExt[n].includes(e.replaceAll(r,".",""))}async isReady(t){if(!this.config.token)return!1;return!t&&this.ready||(this.ready=await(async()=>{const t=await this.getStatus();return!!parseInt(t.status,10)})()),!!this.ready}setMe(t,e){const{config:n}=this;if("object"==typeof t){const e=Object.keys(t);for(let r=0;r<e.length;r++)e[r]in n&&(n[e[r]]=t[e[r]])}else"string"==typeof t&&t in n&&(n[t]="function"==typeof e?e():e);return this}getMe(){return this.config}async getStatus(){return await this.requestApi(n)}async getSegmentation(){return await this.requestApi(r)}async getTemplate(){return await this.requestApi(i)}async getServiceSector(){return await this.requestApi(s)}async getAttendant(){return await this.requestApi(a)}async getContact(t){return await this.requestApi(o,t)}async getProt(t){return await this.requestApi(c,t)}async putContact(t){return await this.requestApi(u,t)}async setContact(t){return await this.requestApi(l,t)}async openFollowup(t){return await this.requestApi(d,t)}async sendText(t,n){const r=e.prepareSendFilter(t);if(!r)return!1;const i={...r,msg:n};return await this.requestApi(h,i)}async sendImage(t,n){const r=e.prepareSendFilter(t);if(!r)return this.addError("internal: no contact");if(!e.isValidURL(n))return this.addError("internal: invalid url");const i=e.extractExtension(n);if(!this.isValidExt(i,"image"))return this.addError("internal: invalid extension "+i);const s={...r,imageUrl:n,imageExtension:i};return await this.requestApi(p,s)}async sendFile(t,n){const r=e.prepareSendFilter(t);if(!r)return this.addError("internal: no contact");if(!e.isValidURL(n))return this.addError("internal: invalid url");const i=e.extractExtension(n);if(!this.isValidExt(i,"file"))return this.addError("internal: invalid extension "+i);const s={...r,fileUrl:n,fileExtension:i};return await this.requestApi(f,s)}async sendSound(t,n){const r=e.prepareSendFilter(t);if(!r)return this.addError("internal: no contact");if(!e.isValidURL(n))return this.addError("internal: invalid url");const i=e.extractExtension(n);if(!this.isValidExt(i,"sound"))return this.addError("internal: invalid extension "+i);const s={...r,soundUrl:n,soundExtension:i};return await this.requestApi(g,s)}async requestApi(e,n={}){const r=this,i=t.getCancelToken().source(),s=i.token;this.addCancelSource(i);const a=await t.default.post(null,{cmd:e,token:r.config.token,...n},{timeout:r.config.timeout,baseURL:r.config.baseURL,cancelToken:s});return this.removeCancelSource(s),a}addCancelSource(t){return this.cancelSources.push({idToken:t.token,source:t}),this}removeCancelSource(t){if(t){const e=this.cancelSources.filter((({idToken:e})=>e!==t));return this.cancelSources=e||[],this}return this.cancelSources=[],this}cancel(){return this.cancelSources.forEach((({source:t})=>t&&t.cancel())),this.removeCancelSource(),this}};

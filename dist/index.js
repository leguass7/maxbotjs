"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("camelcase-keys"),e=require("./Api/index.js"),s=require("./utils.js"),r=require("./decamelcase.js");function _interopDefaultLegacy(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var n=_interopDefaultLegacy(t);const i="get_status",a="get_segmentation",o="get_template",c="get_service_sector",u="get_attendant",l="get_contact",d="get_prot",h="put_contact",p="set_contact",g="open_followup",f="send_text",x="send_image",y="send_file",E="send_sound";exports.default=class Maxbot{constructor(t){return this.config={token:"",timeout:3e3,baseURL:"https://mbr.maxbot.com.br/api/v1.php",debug:!1},this.ready=!1,this.loggingPrefix="MaxbotJs",this.version="0.1.0",this.cancelSources=[],this.allowedExt={file:["pdf","doc","docx","xls","xlsx","ppt","pptx","pps"],image:["jpg","jpeg","png","gif"],sound:["mp3"]},this.setMe(t).configureRequests().configureResponses(),this}log(...t){this.config.debug&&console.log(this.loggingPrefix,...t,"\n")}configureRequests(){return e.setInterceptorRequest((t=>(t.headers["user-agent"]=`maxbotjs/${this.version} (+https://github.com/leguass7/maxbotjs.git)`,t.data=r.default(t.data),this.log("REQUEST:",t.data),t))),this}configureResponses(){return e.setInterceptorResponse((t=>(this.log("RESPONSE:",t.data||t),n.default(t.data,{deep:!0})))),this}addError(t){return{status:0,msg:t}}isValidExt(t,e=""){const r=s.replaceAll(t,".","");if(!e){return Object.keys(this.allowedExt).reduce(((t,e)=>(this.allowedExt[e].forEach((e=>t.push(e))),t)),[]).includes(s.replaceAll(r,".",""))}return!!this.allowedExt[e].includes(s.replaceAll(r,".",""))}async isReady(t=!1){if(!this.config.token)return!1;return!t&&this.ready||(this.ready=await(async()=>{const t=await this.getStatus();return!!parseInt(t.status,10)})()),!!this.ready}setMe(t,e){const{config:s}=this;if("object"==typeof t){const e=Object.keys(t);for(let r=0;r<e.length;r++)e[r]in s&&(s[e[r]]=t[e[r]])}else"string"==typeof t&&t in s&&(s[t]="function"==typeof e?e():e);return this}getMe(){return this.config}async getStatus(){return await this.requestApi(i)}async getSegmentation(){return await this.requestApi(a)}async getTemplate(){return await this.requestApi(o)}async getServiceSector(){return await this.requestApi(c)}async getAttendant(){return await this.requestApi(u)}async getContact(t){return await this.requestApi(l,t)}async getProt(t){return await this.requestApi(d,t)}async putContact(t){return await this.requestApi(h,t)}async setContact(t){return await this.requestApi(p,t)}async openFollowup(t){return await this.requestApi(g,t)}async sendText(t,e){const r=s.prepareSendFilter(t);if(!r)return!1;const n={...r,msg:e};return await this.requestApi(f,n)}async sendImage(t,e){const r=s.prepareSendFilter(t);if(!r)return this.addError("internal: no contact");if(!s.isValidURL(e))return this.addError("internal: invalid url");const n=s.extractExtension(e);if(!this.isValidExt(n,"image"))return this.addError("internal: invalid extension "+n);const i={...r,imageUrl:e,imageExtension:n};return await this.requestApi(x,i)}async sendFile(t,e){const r=s.prepareSendFilter(t);if(!r)return this.addError("internal: no contact");if(!s.isValidURL(e))return this.addError("internal: invalid url");const n=s.extractExtension(e);if(!this.isValidExt(n,"file"))return this.addError("internal: invalid extension "+n);const i={...r,fileUrl:e,fileExtension:n};return await this.requestApi(y,i)}async sendSound(t,e){const r=s.prepareSendFilter(t);if(!r)return this.addError("internal: no contact");if(!s.isValidURL(e))return this.addError("internal: invalid url");const n=s.extractExtension(e);if(!this.isValidExt(n,"sound"))return this.addError("internal: invalid extension "+n);const i={...r,soundUrl:e,soundExtension:n};return await this.requestApi(E,i)}async requestApi(t,s={}){const r=this,n=e.getCancelToken().source(),i=n.token;this.addCancelSource(n);const a=await e.default.post(null,{cmd:t,token:r.config.token,...s},{timeout:r.config.timeout,baseURL:r.config.baseURL,cancelToken:i});return a&&a.status&&(this.ready=!0),this.removeCancelSource(i),a}addCancelSource(t){return this.cancelSources.push({idToken:t.token,source:t}),this}removeCancelSource(t){if(t){const e=this.cancelSources.filter((({idToken:e})=>e!==t));return this.cancelSources=e||[],this}return this.cancelSources=[],this}cancel(){return this.cancelSources.forEach((({source:t})=>t&&t.cancel())),this.removeCancelSource(),this}};
